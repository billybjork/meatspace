# ─────────────── render.yaml ───────────────
# Four Docker services, two Postgres DBs, one env-group
# (drop-in replacement)

##################################################
# 0) Shared env vars (non-secret defaults only)
##################################################
envVarGroups:
  - name: app-secrets
    envVars:
      - key: AWS_REGION
        value: "us-west-1"
      # add S3_BUCKET_NAME, AWS_ACCESS_KEY_ID,
      # AWS_SECRET_ACCESS_KEY, CLOUDFRONT_DOMAIN
      # directly in Render UI

##################################################
# 1) Databases
##################################################
databases:
  - name: app-db
    plan: basic-1gb
    postgresMajorVersion: 16
    ipAllowList: []

  - name: prefect-db
    plan: basic-1gb
    postgresMajorVersion: 16
    ipAllowList: []

##################################################
# 2) Services
##################################################
services:

# ── Prefect Server (API + UI) ───────────────────
  - name: prefect-server
    type: pserv
    env: docker
    plan: starter
    rootDir: backend
    dockerfilePath: Dockerfile.prefect-server

    dockerCommand: "sh -c 'export PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=require && exec prefect server start --host 0.0.0.0 --port 4200'"

    disk:
      name: prefect-home
      mountPath: /.prefect
      sizeGB: 5

    envVars:
      - key: DB_HOST
        fromDatabase: { name: prefect-db, property: host }
      - key: DB_PORT
        fromDatabase: { name: prefect-db, property: port }
      - key: DB_USER
        fromDatabase: { name: prefect-db, property: user }
      - key: DB_PASSWORD
        fromDatabase: { name: prefect-db, property: password }
      - key: DB_NAME
        fromDatabase: { name: prefect-db, property: database }

      - key: PREFECT_SERVER_API_HOST
        value: "0.0.0.0"
      - key: PREFECT_UI_API_URL
        value: "http://prefect-server:4200/api"

      - fromGroup: app-secrets

# ── Prefect Worker ─────────────────────────────
  - name: prefect-worker
    type: worker
    env: docker
    plan: starter
    rootDir: backend
    dockerfilePath: Dockerfile
    dockerCommand: "sh -c 'until curl -fsS http://prefect-server:4200/api/health; do sleep 5; done && prefect worker start --pool default-agent-pool'"

    numInstances: 1
    envVars:
      - key: PREFECT_API_URL
        value: "http://prefect-server:4200/api"
      - key: PREFECT_WORKER_CONCURRENCY_LIMIT
        value: "3"
      - key: DATABASE_URL
        fromDatabase: { name: app-db, property: connectionString }
      - fromGroup: app-secrets

# ── Phoenix LiveView Web ───────────────────────
  - name: phoenix-web
    type: web
    env: docker
    plan: starter
    rootDir: frontend
    dockerfilePath: Dockerfile
    healthCheckPath: /
    dockerCommand: "/app/_build/prod/rel/frontend/bin/frontend start"

    envVars:
      - key: DATABASE_URL
        fromDatabase: { name: app-db, property: connectionString }
      - key: PHX_SERVER
        value: "true"
      - key: SECRET_KEY_BASE
        generateValue: true
      - fromGroup: app-secrets