# ─────────────── render.yaml ───────────────
# Four services, two Postgres DBs, one shared env-group
# (leave comments until you’re comfortable)

##################################################
# 0) Shared secrets
##################################################
envVarGroups:
  - name: app-secrets
    envVars:
      - key: S3_BUCKET_NAME          # filled in via dashboard after first sync
        sync: false
      - key: AWS_REGION
        value: "us-west-1"
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: CLOUDFRONT_DOMAIN
        sync: false

##################################################
# 1) Databases
##################################################
databases:
  - name: app-db
    plan: starter
    postgresMajorVersion: 16
    ipAllowList: []                 # private only

  - name: prefect-db
    plan: starter
    postgresMajorVersion: 16
    ipAllowList: []

##################################################
# 2) Prefect Server (API + UI)
##################################################
services:
  - name: prefect-server
    type: pserv
    runtime: docker
    plan: starter
    rootDir: backend                # build context for this service
    dockerfilePath: Dockerfile.prefect-server
    dockerCommand: >
      prefect server start --host 0.0.0.0 --port 4200
    disk:
      name: prefect-home
      mountPath: /.prefect
      sizeGB: 5
    envVars:
      - key: PREFECT_SERVER_API_HOST
        value: "0.0.0.0"
      - key: PREFECT_UI_API_URL
        value: "http://prefect-server:4200/api"
      - key: PREFECT_API_DATABASE_CONNECTION_URL
        fromDatabase:
          name: prefect-db
          property: connectionString
      - fromGroup: app-secrets

##################################################
# 3) Prefect Worker
##################################################
  - name: prefect-worker
    type: worker
    runtime: docker
    plan: starter
    rootDir: backend
    dockerfilePath: Dockerfile
    dockerCommand: >
      bash -c '
        until curl -fsS http://prefect-server:4200/api/health; do sleep 5; done &&
        prefect worker start --pool default-agent-pool
      '
    scaling:
      minInstances: 1               # schema requires ≥ 1
      maxInstances: 2
      targetCPUPercent: 60
    envVars:
      - key: PREFECT_API_URL
        value: "http://prefect-server:4200/api"
      - key: PREFECT_WORKER_CONCURRENCY_LIMIT
        value: "3"
      - key: DATABASE_URL
        fromDatabase:
          name: app-db
          property: connectionString
      - fromGroup: app-secrets

##################################################
# 4) Phoenix LiveView web
##################################################
  - name: phoenix-web
    type: web
    runtime: docker
    plan: starter
    rootDir: frontend
    dockerfilePath: Dockerfile
    dockerCommand: >
      /app/_build/prod/rel/frontend/bin/frontend start
    healthCheckPath: /
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: app-db
          property: connectionString
      - key: PHX_SERVER
        value: "true"
      - key: SECRET_KEY_BASE
        generateValue: true
      - fromGroup: app-secrets